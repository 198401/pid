


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* STARTUP.S: Startup file for ADI ADuC702x device seri
                       es                    */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2008 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ;/*
   15 00000000         ; *  The STARTUP.S code is executed after CPU Reset. Thi
                       s file may be 
   16 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   17 00000000         ; *  symbols are entered under Options - ASM - Define.
   18 00000000         ; *
   19 00000000         ; *  RAM_INTVEC: when set the startup code copies except
                       ion vectors 
   20 00000000         ; *  from on-chip Flash to on-chip RAM and remaps RAM to
                        address 0.
   21 00000000         ; */
   22 00000000         
   23 00000000         
   24 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   25 00000000         
   26 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   27 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   28 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   29 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   30 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   31 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B



ARM Macro Assembler    Page 2 


   32 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   33 00000000         
   34 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   35 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   36 00000000         
   37 00000000         
   38 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   39 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   40 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   41 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   42 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   43 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   44 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   45 00000000         ;// </h>
   46 00000000         
   47 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   48 00000000 00000020 
                       SVC_Stack_Size
                               EQU              0x00000020
   49 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   50 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   51 00000000 00000040 
                       IRQ_Stack_Size
                               EQU              0x00000040
   52 00000000 00000050 
                       USR_Stack_Size
                               EQU              0x00000050
   53 00000000         
   55 00000000 00000060 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   56 00000000         
   57 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   58 00000000         
   59 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   60 00000050         __initial_sp
                               SPACE            ISR_Stack_Size
   61 000000B0         
   62 000000B0         Stack_Top
   63 000000B0         
   64 000000B0         
   65 000000B0         ;// <h> Heap Configuration
   66 000000B0         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>



ARM Macro Assembler    Page 3 


   67 000000B0         ;// </h>
   68 000000B0         
   69 000000B0 00000000 
                       Heap_Size
                               EQU              0x00000000
   70 000000B0         
   71 000000B0                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   72 00000000         __heap_base
   73 00000000         Heap_Mem
                               SPACE            Heap_Size
   74 00000000         __heap_limit
   75 00000000         
   76 00000000         
   77 00000000         ; MMR definitions
   78 00000000 FFFF0000 
                       MMR_BASE
                               EQU              0xFFFF0000  ; MMR Base Address
   79 00000000 00000220 
                       REMAP_OFFSET
                               EQU              0x0220
   80 00000000 00000224 
                       PREMAP_OFFSET
                               EQU              0x0224
   81 00000000 00000404 
                       POWKEY1_OFFSET
                               EQU              0x0404
   82 00000000 00000408 
                       POWCON_OFFSET
                               EQU              0x0408
   83 00000000 0000040C 
                       POWKEY2_OFFSET
                               EQU              0x040C
   84 00000000         
   85 00000000         ;// <e> PLL Setup
   86 00000000         ;//   <o1.0..2>  CD: PLL Multiplier Selection
   87 00000000         ;//               <0-7>
   88 00000000         ;//               <i> CD Value
   89 00000000         ;//   <o1.3>     FINT: Fast Interrupt
   90 00000000         ;//               <0-1>
   91 00000000         ;//               <i> Switches to CD0 for FIQ
   92 00000000         ;// </e>
   93 00000000 00000001 
                       PLL_SETUP
                               EQU              1
   94 00000000 00000000 
                       PLLCFG_Val
                               EQU              0x00000000
   95 00000000         
   96 00000000         
   97 00000000         ;// <e> Pin Setup
   98 00000000 00000000 
                       GPIO_SETUP
                               EQU              0
   99 00000000 FFFFF400 
                       GPIOBASE
                               EQU              0xFFFFF400
  100 00000000         
  101 00000000         ;//   <h>  Port 0



ARM Macro Assembler    Page 4 


  102 00000000         ;//     <o.0..1>    P0.0  <0=> GPIO      <1=> CMPOUT    
                       <2=> MS2     <3=> PLAI[7]
  103 00000000         ;//     <o.4..5>    P0.1  <0=> GPIO      <1=> ---       
                       <2=> XBEN0   <3=> ---
  104 00000000         ;//     <o.8..9>    P0.2  <0=> GPIO      <1=> ---       
                       <2=> XBEN1   <3=> ---
  105 00000000         ;//     <o.12..13>  P0.3  <0=> GPIO      <1=> TRST      
                       <2=> XA16    <3=> ADCBUSY
  106 00000000         ;//     <o.16..17>  P0.4  <0=> GPIO/IRQ0 <1=> CONVSTART 
                       <2=> MS1     <3=> PLAO[1]
  107 00000000         ;//     <o.20..21>  P0.5  <0=> GPIO/IRQ1 <1=> ADCBUSY   
                       <2=> MS0     <3=> PLAO[2]
  108 00000000         ;//     <o.24..25>  P0.6  <0=> GPIO      <1=> MRST      
                       <2=> XAE     <3=> PLAO[3]
  109 00000000         ;//     <o.28..29>  P0.7  <0=> GPIO      <1=> ECLK      
                       <2=> SIN     <3=> PLAO[4]
  110 00000000         ;//   </h>
  111 00000000 00000000 
                       GP0CON_Val
                               EQU              0x00000000
  112 00000000         
  113 00000000         ;//   <h>  Port 1
  114 00000000         ;//     <o.0..1>    P1.0  <0=> GPIO      <1=> SIN       
                       <2=> I2C0SCL <3=> PLAI[0]
  115 00000000         ;//     <o.4..5>    P1.1  <0=> GPIO      <1=> SOUT      
                       <2=> I2C0SDA <3=> PLAI[1]
  116 00000000         ;//     <o.8..9>    P1.2  <0=> GPIO      <1=> RTS       
                       <2=> I2C1SCL <3=> PLAI[2]
  117 00000000         ;//     <o.12..13>  P1.3  <0=> GPIO      <1=> CTS       
                       <2=> I2C1SDA <3=> PLAI[3]
  118 00000000         ;//     <o.16..17>  P1.4  <0=> GPIO/IRQ2 <1=> RI        
                       <2=> SPICLK  <3=> PLAI[4]
  119 00000000         ;//     <o.20..21>  P1.5  <0=> GPIO/IRQ3 <1=> DCD       
                       <2=> SPIMISO <3=> PLAI[5]
  120 00000000         ;//     <o.24..25>  P1.6  <0=> GPIO      <1=> DSR       
                       <2=> SPIMOSI <3=> PLAI[6]
  121 00000000         ;//     <o.28..29>  P1.7  <0=> GPIO      <1=> DTR       
                       <2=> SPICSL  <3=> PLAO[0]
  122 00000000         ;//   </h>
  123 00000000 00000000 
                       GP1CON_Val
                               EQU              0x00000000
  124 00000000         
  125 00000000         ;//   <h>  Port 2
  126 00000000         ;//     <o.0..1>    P2.0  <0=> GPIO      <1=> CONVSTART 
                       <2=> SOUT    <3=> PLAO[5]
  127 00000000         ;//     <o.4..5>    P2.1  <0=> GPIO      <1=> ---       
                       <2=> XWS     <3=> PLAO[6]
  128 00000000         ;//     <o.8..9>    P2.2  <0=> GPIO      <1=> ---       
                       <2=> XRS     <3=> PLAO[7]
  129 00000000         ;//     <o.12..13>  P2.3  <0=> GPIO      <1=> ---       
                       <2=> XAE     <3=> ---
  130 00000000         ;//     <o.16..17>  P2.4  <0=> GPIO      <1=> ---       
                       <2=> MS0     <3=> ---
  131 00000000         ;//     <o.20..21>  P2.5  <0=> GPIO      <1=> ---       
                       <2=> MS1     <3=> ---
  132 00000000         ;//     <o.24..25>  P2.6  <0=> GPIO      <1=> ---       
                       <2=> MS2     <3=> ---
  133 00000000         ;//     <o.28..29>  P2.7  <0=> GPIO      <1=> ---       



ARM Macro Assembler    Page 5 


                       <2=> MS3     <3=> ---
  134 00000000         ;//   </h>
  135 00000000 00000000 
                       GP2CON_Val
                               EQU              0x00000000
  136 00000000         
  137 00000000         ;//   <h>  Port 3
  138 00000000         ;//     <o.0..1>    P3.0  <0=> GPIO      <1=> PWM0H     
                       <2=> XAD0    <3=> PLAI[8]
  139 00000000         ;//     <o.4..5>    P3.1  <0=> GPIO      <1=> PWM0L     
                       <2=> XAD1    <3=> PLAI[9]
  140 00000000         ;//     <o.8..9>    P3.2  <0=> GPIO      <1=> PWM1H     
                       <2=> XAD2    <3=> PLAI[10]
  141 00000000         ;//     <o.12..13>  P3.3  <0=> GPIO      <1=> PWM1L     
                       <2=> XAD3    <3=> PLAI[11]
  142 00000000         ;//     <o.16..17>  P3.4  <0=> GPIO      <1=> PWM2H     
                       <2=> XAD4    <3=> PLAI[12]
  143 00000000         ;//     <o.20..21>  P3.5  <0=> GPIO      <1=> PWM2L     
                       <2=> XAD5    <3=> PLAI[13]
  144 00000000         ;//     <o.24..25>  P3.6  <0=> GPIO      <1=> PWMTRIP   
                       <2=> XAD6    <3=> PLAI[14]
  145 00000000         ;//     <o.28..29>  P3.7  <0=> GPIO      <1=> PWMSYNC   
                       <2=> XAD7    <3=> PLAI[15]
  146 00000000         ;//   </h>
  147 00000000 00000000 
                       GP3CON_Val
                               EQU              0x00000000
  148 00000000         
  149 00000000         ;//   <h>  Port 4
  150 00000000         ;//     <o.0..1>    P4.0  <0=> GPIO      <1=> ---       
                       <2=> XAD8    <3=> PLAO[8]
  151 00000000         ;//     <o.4..5>    P4.1  <0=> GPIO      <1=> ---       
                       <2=> XAD9    <3=> PLAO[9]
  152 00000000         ;//     <o.8..9>    P4.2  <0=> GPIO      <1=> ---       
                       <2=> XAD10   <3=> PLAO[10]
  153 00000000         ;//     <o.12..13>  P4.3  <0=> GPIO      <1=> ---       
                       <2=> XAD11   <3=> PLAO[11]
  154 00000000         ;//     <o.16..17>  P4.4  <0=> GPIO      <1=> ---       
                       <2=> XAD12   <3=> PLAO[12]
  155 00000000         ;//     <o.20..21>  P4.5  <0=> GPIO      <1=> ---       
                       <2=> XAD13   <3=> PLAO[13]
  156 00000000         ;//     <o.24..25>  P4.6  <0=> GPIO      <1=> ---       
                       <2=> XAD14   <3=> PLAO[14]
  157 00000000         ;//     <o.28..29>  P4.7  <0=> GPIO      <1=> ---       
                       <2=> XAD15   <3=> PLAO[15]
  158 00000000         ;//   </h>
  159 00000000 00000000 
                       GP4CON_Val
                               EQU              0x00000000
  160 00000000         
  161 00000000         ;// </e>
  162 00000000         
  163 00000000         
  164 00000000         ;// <e> External Memory Interface
  165 00000000 00000000 
                       XM_SETUP
                               EQU              0
  166 00000000 FFFFF000 
                       XMBASE  EQU              0xFFFFF000



ARM Macro Assembler    Page 6 


  167 00000000         
  168 00000000         ;//   <e.0>  Enable Memory Region 0
  169 00000000         ;//     <o.1>       Data Bus Width  <0=> 8-bit  <1=> 16-
                       bit
  170 00000000         ;//     <o1.11>     Enable Dynamic Addressing
  171 00000000         ;//     <o1.15>     Byte Enabled Write Strobe
  172 00000000         ;//     <o1.10>     Disable extra Address Latch Hold Cyc
                       le
  173 00000000         ;//     <o1.8>      Disable extra Write Address Hold Cyc
                       le
  174 00000000         ;//     <o1.9>      Disable Read Bus Turn Cycle
  175 00000000         ;//     <o1.12..14> Address Wait States <0-7>
  176 00000000         ;//                 <i> Number of Wait States added for 
                       AE
  177 00000000         ;//     <o1.0..3>   Read Wait States <0-15>
  178 00000000         ;//                 <i> Number of Wait States added for 
                       RS
  179 00000000         ;//     <o1.4..7>   Write Wait States <0-15>
  180 00000000         ;//                 <i> Number of Wait States added for 
                       WS
  181 00000000         ;//   </e>
  182 00000000 00000000 
                       XM0CON_Val
                               EQU              0x00000000
  183 00000000 000070FF 
                       XM0PAR_Val
                               EQU              0x000070FF
  184 00000000         
  185 00000000         ;//   <e.0>  Enable Memory Region 1
  186 00000000         ;//     <o.1>       Data Bus Width  <0=> 8-bit  <1=> 16-
                       bit
  187 00000000         ;//     <o1.11>     Enable Dynamic Addressing
  188 00000000         ;//     <o1.15>     Byte Enabled Write Strobe
  189 00000000         ;//     <o1.10>     Disable extra Address Latch Hold Cyc
                       le
  190 00000000         ;//     <o1.8>      Disable extra Write Address Hold Cyc
                       le
  191 00000000         ;//     <o1.9>      Disable Read Bus Turn Cycle
  192 00000000         ;//     <o1.12..14> Address Wait States <0-7>
  193 00000000         ;//                 <i> Number of Wait States added for 
                       AE
  194 00000000         ;//     <o1.0..3>   Read Wait States <0-15>
  195 00000000         ;//                 <i> Number of Wait States added for 
                       RS
  196 00000000         ;//     <o1.4..7>   Write Wait States <0-15>
  197 00000000         ;//                 <i> Number of Wait States added for 
                       WS
  198 00000000         ;//   </e>
  199 00000000 00000000 
                       XM1CON_Val
                               EQU              0x00000000
  200 00000000 000070FF 
                       XM1PAR_Val
                               EQU              0x000070FF
  201 00000000         
  202 00000000         ;//   <e.0>  Enable Memory Region 2
  203 00000000         ;//     <o.1>       Data Bus Width  <0=> 8-bit  <1=> 16-
                       bit
  204 00000000         ;//     <o1.11>     Enable Dynamic Addressing



ARM Macro Assembler    Page 7 


  205 00000000         ;//     <o1.15>     Byte Enabled Write Strobe
  206 00000000         ;//     <o1.10>     Disable extra Address Latch Hold Cyc
                       le
  207 00000000         ;//     <o1.8>      Disable extra Write Address Hold Cyc
                       le
  208 00000000         ;//     <o1.9>      Disable Read Bus Turn Cycle
  209 00000000         ;//     <o1.12..14> Address Wait States <0-7>
  210 00000000         ;//                 <i> Number of Wait States added for 
                       AE
  211 00000000         ;//     <o1.0..3>   Read Wait States <0-15>
  212 00000000         ;//                 <i> Number of Wait States added for 
                       RS
  213 00000000         ;//     <o1.4..7>   Write Wait States <0-15>
  214 00000000         ;//                 <i> Number of Wait States added for 
                       WS
  215 00000000         ;//   </e>
  216 00000000 00000000 
                       XM2CON_Val
                               EQU              0x00000000
  217 00000000 000070FF 
                       XM2PAR_Val
                               EQU              0x000070FF
  218 00000000         
  219 00000000         ;//   <e.0>  Enable Memory Region 3
  220 00000000         ;//     <o.1>       Data Bus Width  <0=> 8-bit  <1=> 16-
                       bit
  221 00000000         ;//     <o1.11>     Enable Dynamic Addressing
  222 00000000         ;//     <o1.15>     Byte Enabled Write Strobe
  223 00000000         ;//     <o1.10>     Disable extra Address Latch Hold Cyc
                       le
  224 00000000         ;//     <o1.8>      Disable extra Write Address Hold Cyc
                       le
  225 00000000         ;//     <o1.9>      Disable Read Bus Turn Cycle
  226 00000000         ;//     <o1.12..14> Address Wait States <0-7>
  227 00000000         ;//                 <i> Number of Wait States added for 
                       AE
  228 00000000         ;//     <o1.0..3>   Read Wait States <0-15>
  229 00000000         ;//                 <i> Number of Wait States added for 
                       RS
  230 00000000         ;//     <o1.4..7>   Write Wait States <0-15>
  231 00000000         ;//                 <i> Number of Wait States added for 
                       WS
  232 00000000         ;//   </e>
  233 00000000 00000000 
                       XM3CON_Val
                               EQU              0x00000000
  234 00000000 000070FF 
                       XM3PAR_Val
                               EQU              0x000070FF
  235 00000000         
  236 00000000         ;//   <e.0>         Memory Muxed Mode
  237 00000000 00000001 
                       XMCFG_Val
                               EQU              0x00000001
  238 00000000         ;//   </e>
  239 00000000         
  240 00000000         ;// </e>
  241 00000000         
  242 00000000         



ARM Macro Assembler    Page 8 


  243 00000000                 PRESERVE8
  244 00000000         
  245 00000000         
  246 00000000         ; Area Definition and Entry Point
  247 00000000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  248 00000000         
  249 00000000                 AREA             RESET, CODE, READONLY
  250 00000000                 ARM
  251 00000000         
  252 00000000         
  253 00000000         ; Exception Vectors
  254 00000000         ;  Mapped to Address 0.
  255 00000000         ;  Absolute addressing mode must be used.
  256 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  257 00000000         
  258 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
  259 00000004 E59FF018        LDR              PC, Undef_Addr
  260 00000008 E59FF018        LDR              PC, SWI_Addr
  261 0000000C E59FF018        LDR              PC, PAbt_Addr
  262 00000010 E59FF018        LDR              PC, DAbt_Addr
  263 00000014 E1A00000        NOP                          ; Reserved Vector 
  264 00000018 E59FF018        LDR              PC, IRQ_Addr
  265 0000001C E59FF018        LDR              PC, FIQ_Addr
  266 00000020         
  267 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  268 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
  269 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
  270 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
  271 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  272 00000034 00000000        DCD              0           ; Reserved Address
  273 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  274 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
  275 00000040         
  276 00000040                 IMPORT           SWI_Handler
  277 00000040                 IMPORT           IRQ_Handler
  278 00000040         
  279 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  280 00000044         ;SWI_Handler    B       SWI_Handler            ; Part of
                        RTL
  281 00000044 EAFFFFFE 



ARM Macro Assembler    Page 9 


                       PAbt_Handler
                               B                PAbt_Handler
  282 00000048 EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  283 0000004C         ;IRQ_Handler    B       IRQ_Handler            ; in IRQ.
                       s
  284 0000004C EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  285 00000050         
  286 00000050         
  287 00000050         ; Reset Handler
  288 00000050         
  289 00000050                 EXPORT           Reset_Handler
  290 00000050         Reset_Handler
  291 00000050         
  292 00000050         
  293 00000050         ; Setup PLL
  294 00000050                 IF               PLL_SETUP <> 0
  295 00000050 E59F0068        LDR              R0, =MMR_BASE
  296 00000054 E3A01001        MOV              R1, #0x01
  297 00000058 E5801404        STR              R1, [R0,#POWKEY1_OFFSET]
  298 0000005C E3A01000        MOV              R1, #PLLCFG_Val
  299 00000060 E5801408        STR              R1, [R0,#POWCON_OFFSET]
  300 00000064 E3A010F4        MOV              R1, #0xF4
  301 00000068 E580140C        STR              R1, [R0,#POWKEY2_OFFSET]
  302 0000006C                 ENDIF                        ; PLL_SETUP
  303 0000006C         
  304 0000006C         
  305 0000006C         ; Setup Pins
  306 0000006C                 IF               GPIO_SETUP <> 0
  321                          ENDIF                        ; GPIO_SETUP
  322 0000006C         
  323 0000006C         
  324 0000006C         ; Setup External Memory Interface
  325 0000006C                 IF               XM_SETUP <> 0
  345                          ENDIF                        ; XM_SETUP
  346 0000006C         
  347 0000006C         
  348 0000006C         ; Copy Exception Vectors to Internal RAM and Remap Memor
                       y
  349 0000006C         ;  (when Interrupt Vectors are in RAM)
  350 0000006C         
  351 0000006C                 IF               :DEF:RAM_INTVEC
  362                          ENDIF
  363 0000006C         
  364 0000006C         
  365 0000006C         ; Setup Stack for each mode
  366 0000006C         
  367 0000006C E59F0050        LDR              R0, =Stack_Top
  368 00000070         
  369 00000070         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  370 00000070 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  371 00000074 E1A0D000        MOV              SP, R0
  372 00000078 E2400000        SUB              R0, R0, #UND_Stack_Size
  373 0000007C         



ARM Macro Assembler    Page 10 


  374 0000007C         ;  Enter Abort Mode and set its Stack Pointer
  375 0000007C E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  376 00000080 E1A0D000        MOV              SP, R0
  377 00000084 E2400000        SUB              R0, R0, #ABT_Stack_Size
  378 00000088         
  379 00000088         ;  Enter FIQ Mode and set its Stack Pointer
  380 00000088 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  381 0000008C E1A0D000        MOV              SP, R0
  382 00000090 E2400000        SUB              R0, R0, #FIQ_Stack_Size
  383 00000094         
  384 00000094         ;  Enter IRQ Mode and set its Stack Pointer
  385 00000094 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  386 00000098 E1A0D000        MOV              SP, R0
  387 0000009C E2400040        SUB              R0, R0, #IRQ_Stack_Size
  388 000000A0         
  389 000000A0         ;  Enter Supervisor Mode and set its Stack Pointer
  390 000000A0 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  391 000000A4 E1A0D000        MOV              SP, R0
  392 000000A8 E2400020        SUB              R0, R0, #SVC_Stack_Size
  393 000000AC         
  394 000000AC         ;  Enter User Mode and set its Stack Pointer
  395 000000AC E321F010        MSR              CPSR_c, #Mode_USR
  396 000000B0                 IF               :DEF:__MICROLIB
  401 000000B0         
  402 000000B0 E1A0D000        MOV              SP, R0
  403 000000B4 E24DA050        SUB              SL, SP, #USR_Stack_Size
  404 000000B8         
  405 000000B8                 ENDIF
  406 000000B8         
  407 000000B8         
  408 000000B8         ; Enter the C code
  409 000000B8         
  410 000000B8                 IMPORT           __main
  411 000000B8 E59F0008        LDR              R0, =__main
  412 000000BC E12FFF10        BX               R0
  413 000000C0         
  414 000000C0         
  415 000000C0                 IF               :DEF:__MICROLIB
  421 000000C0         ; User Initial Stack & Heap
  422 000000C0 FFFF0000 
              00000000 
              00000000         AREA             |.text|, CODE, READONLY
  423 00000000         
  424 00000000                 IMPORT           __use_two_region_memory
  425 00000000                 EXPORT           __user_initial_stackheap
  426 00000000         __user_initial_stackheap
  427 00000000         
  428 00000000 E59F000C        LDR              R0, =  Heap_Mem
  429 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  430 00000008 E59F2004        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  431 0000000C E59F3008        LDR              R3, = Stack_Mem
  432 00000010 E12FFF1E        BX               LR
  433 00000014                 ENDIF



ARM Macro Assembler    Page 11 


  434 00000014         
  435 00000014         
  436 00000014                 END
              00000000 
              00000050 
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=.\Startup.d -o.\Startup.
o -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ADI --pr
edefine="__RTX SETA 1" --list=.\Startup.lst ..\src\Startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 57 in file ..\src\Startup.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 59 in file ..\src\Startup.s
   Uses
      At line 429 in file ..\src\Startup.s
      At line 431 in file ..\src\Startup.s

Stack_Top 000000B0

Symbol: Stack_Top
   Definitions
      At line 62 in file ..\src\Startup.s
   Uses
      At line 367 in file ..\src\Startup.s
Comment: Stack_Top used once
__initial_sp 00000050

Symbol: __initial_sp
   Definitions
      At line 60 in file ..\src\Startup.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 71 in file ..\src\Startup.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 73 in file ..\src\Startup.s
   Uses
      At line 428 in file ..\src\Startup.s
      At line 430 in file ..\src\Startup.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 72 in file ..\src\Startup.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 74 in file ..\src\Startup.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 271 in file ..\src\Startup.s
   Uses
      At line 262 in file ..\src\Startup.s
Comment: DAbt_Addr used once
DAbt_Handler 00000048

Symbol: DAbt_Handler
   Definitions
      At line 282 in file ..\src\Startup.s
   Uses
      At line 271 in file ..\src\Startup.s
      At line 282 in file ..\src\Startup.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 274 in file ..\src\Startup.s
   Uses
      At line 265 in file ..\src\Startup.s
Comment: FIQ_Addr used once
FIQ_Handler 0000004C

Symbol: FIQ_Handler
   Definitions
      At line 284 in file ..\src\Startup.s
   Uses
      At line 274 in file ..\src\Startup.s
      At line 284 in file ..\src\Startup.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 273 in file ..\src\Startup.s
   Uses
      At line 264 in file ..\src\Startup.s
Comment: IRQ_Addr used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 270 in file ..\src\Startup.s
   Uses
      At line 261 in file ..\src\Startup.s
Comment: PAbt_Addr used once
PAbt_Handler 00000044

Symbol: PAbt_Handler
   Definitions
      At line 281 in file ..\src\Startup.s
   Uses
      At line 270 in file ..\src\Startup.s
      At line 281 in file ..\src\Startup.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 249 in file ..\src\Startup.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 267 in file ..\src\Startup.s
   Uses
      At line 258 in file ..\src\Startup.s
Comment: Reset_Addr used once
Reset_Handler 00000050

Symbol: Reset_Handler
   Definitions
      At line 290 in file ..\src\Startup.s
   Uses
      At line 267 in file ..\src\Startup.s
      At line 289 in file ..\src\Startup.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 269 in file ..\src\Startup.s
   Uses
      At line 260 in file ..\src\Startup.s
Comment: SWI_Addr used once
Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 268 in file ..\src\Startup.s
   Uses
      At line 259 in file ..\src\Startup.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 279 in file ..\src\Startup.s
   Uses
      At line 268 in file ..\src\Startup.s
      At line 279 in file ..\src\Startup.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 258 in file ..\src\Startup.s
   Uses
      None
Comment: Vectors unused
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 422 in file ..\src\Startup.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 426 in file ..\src\Startup.s
   Uses
      At line 425 in file ..\src\Startup.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 49 in file ..\src\Startup.s
   Uses
      At line 55 in file ..\src\Startup.s
      At line 377 in file ..\src\Startup.s

FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 50 in file ..\src\Startup.s
   Uses
      At line 55 in file ..\src\Startup.s
      At line 382 in file ..\src\Startup.s

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 35 in file ..\src\Startup.s
   Uses
      At line 370 in file ..\src\Startup.s
      At line 375 in file ..\src\Startup.s
      At line 380 in file ..\src\Startup.s
      At line 385 in file ..\src\Startup.s
      At line 390 in file ..\src\Startup.s

GP0CON_Val 00000000

Symbol: GP0CON_Val
   Definitions
      At line 111 in file ..\src\Startup.s
   Uses
      None
Comment: GP0CON_Val unused
GP1CON_Val 00000000

Symbol: GP1CON_Val
   Definitions
      At line 123 in file ..\src\Startup.s
   Uses
      None
Comment: GP1CON_Val unused
GP2CON_Val 00000000

Symbol: GP2CON_Val
   Definitions
      At line 135 in file ..\src\Startup.s
   Uses
      None
Comment: GP2CON_Val unused
GP3CON_Val 00000000

Symbol: GP3CON_Val
   Definitions
      At line 147 in file ..\src\Startup.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GP3CON_Val unused
GP4CON_Val 00000000

Symbol: GP4CON_Val
   Definitions
      At line 159 in file ..\src\Startup.s
   Uses
      None
Comment: GP4CON_Val unused
GPIOBASE FFFFF400

Symbol: GPIOBASE
   Definitions
      At line 99 in file ..\src\Startup.s
   Uses
      None
Comment: GPIOBASE unused
GPIO_SETUP 00000000

Symbol: GPIO_SETUP
   Definitions
      At line 98 in file ..\src\Startup.s
   Uses
      At line 306 in file ..\src\Startup.s
Comment: GPIO_SETUP used once
Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 69 in file ..\src\Startup.s
   Uses
      At line 73 in file ..\src\Startup.s
      At line 430 in file ..\src\Startup.s

IRQ_Stack_Size 00000040

Symbol: IRQ_Stack_Size
   Definitions
      At line 51 in file ..\src\Startup.s
   Uses
      At line 55 in file ..\src\Startup.s
      At line 387 in file ..\src\Startup.s

ISR_Stack_Size 00000060

Symbol: ISR_Stack_Size
   Definitions
      At line 55 in file ..\src\Startup.s
   Uses
      At line 60 in file ..\src\Startup.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 34 in file ..\src\Startup.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 370 in file ..\src\Startup.s
      At line 375 in file ..\src\Startup.s
      At line 380 in file ..\src\Startup.s
      At line 385 in file ..\src\Startup.s
      At line 390 in file ..\src\Startup.s

MMR_BASE FFFF0000

Symbol: MMR_BASE
   Definitions
      At line 78 in file ..\src\Startup.s
   Uses
      At line 295 in file ..\src\Startup.s
Comment: MMR_BASE used once
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 30 in file ..\src\Startup.s
   Uses
      At line 375 in file ..\src\Startup.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 27 in file ..\src\Startup.s
   Uses
      At line 380 in file ..\src\Startup.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 28 in file ..\src\Startup.s
   Uses
      At line 385 in file ..\src\Startup.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 29 in file ..\src\Startup.s
   Uses
      At line 390 in file ..\src\Startup.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 32 in file ..\src\Startup.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 31 in file ..\src\Startup.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 370 in file ..\src\Startup.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 26 in file ..\src\Startup.s
   Uses
      At line 395 in file ..\src\Startup.s
Comment: Mode_USR used once
PLLCFG_Val 00000000

Symbol: PLLCFG_Val
   Definitions
      At line 94 in file ..\src\Startup.s
   Uses
      At line 298 in file ..\src\Startup.s
Comment: PLLCFG_Val used once
PLL_SETUP 00000001

Symbol: PLL_SETUP
   Definitions
      At line 93 in file ..\src\Startup.s
   Uses
      At line 294 in file ..\src\Startup.s
Comment: PLL_SETUP used once
POWCON_OFFSET 00000408

Symbol: POWCON_OFFSET
   Definitions
      At line 82 in file ..\src\Startup.s
   Uses
      At line 299 in file ..\src\Startup.s
Comment: POWCON_OFFSET used once
POWKEY1_OFFSET 00000404

Symbol: POWKEY1_OFFSET
   Definitions
      At line 81 in file ..\src\Startup.s
   Uses
      At line 297 in file ..\src\Startup.s
Comment: POWKEY1_OFFSET used once
POWKEY2_OFFSET 0000040C

Symbol: POWKEY2_OFFSET
   Definitions
      At line 83 in file ..\src\Startup.s
   Uses
      At line 301 in file ..\src\Startup.s
Comment: POWKEY2_OFFSET used once
PREMAP_OFFSET 00000224

Symbol: PREMAP_OFFSET
   Definitions
      At line 80 in file ..\src\Startup.s
   Uses
      None
Comment: PREMAP_OFFSET unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

REMAP_OFFSET 00000220

Symbol: REMAP_OFFSET
   Definitions
      At line 79 in file ..\src\Startup.s
   Uses
      None
Comment: REMAP_OFFSET unused
SVC_Stack_Size 00000020

Symbol: SVC_Stack_Size
   Definitions
      At line 48 in file ..\src\Startup.s
   Uses
      At line 55 in file ..\src\Startup.s
      At line 392 in file ..\src\Startup.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 47 in file ..\src\Startup.s
   Uses
      At line 55 in file ..\src\Startup.s
      At line 372 in file ..\src\Startup.s

USR_Stack_Size 00000050

Symbol: USR_Stack_Size
   Definitions
      At line 52 in file ..\src\Startup.s
   Uses
      At line 59 in file ..\src\Startup.s
      At line 403 in file ..\src\Startup.s
      At line 429 in file ..\src\Startup.s

XM0CON_Val 00000000

Symbol: XM0CON_Val
   Definitions
      At line 182 in file ..\src\Startup.s
   Uses
      None
Comment: XM0CON_Val unused
XM0PAR_Val 000070FF

Symbol: XM0PAR_Val
   Definitions
      At line 183 in file ..\src\Startup.s
   Uses
      None
Comment: XM0PAR_Val unused
XM1CON_Val 00000000

Symbol: XM1CON_Val
   Definitions
      At line 199 in file ..\src\Startup.s
   Uses
      None



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Comment: XM1CON_Val unused
XM1PAR_Val 000070FF

Symbol: XM1PAR_Val
   Definitions
      At line 200 in file ..\src\Startup.s
   Uses
      None
Comment: XM1PAR_Val unused
XM2CON_Val 00000000

Symbol: XM2CON_Val
   Definitions
      At line 216 in file ..\src\Startup.s
   Uses
      None
Comment: XM2CON_Val unused
XM2PAR_Val 000070FF

Symbol: XM2PAR_Val
   Definitions
      At line 217 in file ..\src\Startup.s
   Uses
      None
Comment: XM2PAR_Val unused
XM3CON_Val 00000000

Symbol: XM3CON_Val
   Definitions
      At line 233 in file ..\src\Startup.s
   Uses
      None
Comment: XM3CON_Val unused
XM3PAR_Val 000070FF

Symbol: XM3PAR_Val
   Definitions
      At line 234 in file ..\src\Startup.s
   Uses
      None
Comment: XM3PAR_Val unused
XMBASE FFFFF000

Symbol: XMBASE
   Definitions
      At line 166 in file ..\src\Startup.s
   Uses
      None
Comment: XMBASE unused
XMCFG_Val 00000001

Symbol: XMCFG_Val
   Definitions
      At line 237 in file ..\src\Startup.s
   Uses
      None
Comment: XMCFG_Val unused
XM_SETUP 00000000




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Symbol: XM_SETUP
   Definitions
      At line 165 in file ..\src\Startup.s
   Uses
      At line 325 in file ..\src\Startup.s
Comment: XM_SETUP used once
43 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

IRQ_Handler 00000000

Symbol: IRQ_Handler
   Definitions
      At line 277 in file ..\src\Startup.s
   Uses
      At line 273 in file ..\src\Startup.s
Comment: IRQ_Handler used once
SWI_Handler 00000000

Symbol: SWI_Handler
   Definitions
      At line 276 in file ..\src\Startup.s
   Uses
      At line 269 in file ..\src\Startup.s
Comment: SWI_Handler used once
__main 00000000

Symbol: __main
   Definitions
      At line 410 in file ..\src\Startup.s
   Uses
      At line 411 in file ..\src\Startup.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 424 in file ..\src\Startup.s
   Uses
      None
Comment: __use_two_region_memory unused
4 symbols
412 symbols in table
